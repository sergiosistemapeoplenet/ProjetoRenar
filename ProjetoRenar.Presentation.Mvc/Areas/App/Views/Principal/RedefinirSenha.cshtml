@{
    ViewBag.Icon = "fa fa-key";
    ViewBag.Titulo = "Redefinir senha";
    ViewBag.Pagina = "Redefinir senha";
    ViewBag.Subtitulo = "Redefinir senha.";
}

@model ProjetoRenar.Application.ViewModels.Usuarios.RedefinirSenhaViewModel
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

<div class="row" style="margin-top: -10px;">
    <div class="col-md-12">
        <div class="card-header-tab card-header">
            <div class="card-header-title">
                <h4 style="margin-top: 10px;" class="card-title"><i class="fa fa-search-plus"></i>&nbsp;Redefinição de senha de usuário</h4>
            </div>
        </div>
        <div class="card card-body">

            @using (Html.BeginForm("RedefinirSenha", "Principal", FormMethod.Post))
            {
                <div class="row mb-3">
                    <div class="col-md-4">
                        <label>Informe a nova senha:</label>
                        <div class="input-group">
                            @Html.PasswordFor(model => model.NovaSenhaUsuario, new { @class = "form-control", id = "novaSenha" })
                            <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('novaSenha', this)">
                                <i class="fa fa-eye"></i>
                            </button>
                        </div>
                        <div class="text-danger">
                            @Html.ValidationMessageFor(model => model.NovaSenhaUsuario)
                        </div>
                    </div>

                    <div class="col-md-4">
                        <label>Confirme a nova senha:</label>
                        <div class="input-group">
                            @Html.PasswordFor(model => model.NovaSenhaConfirmacao, new { @class = "form-control", id = "confirmaSenha" })
                            <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('confirmaSenha', this)">
                                <i class="fa fa-eye"></i>
                            </button>
                        </div>
                        <div class="text-danger">
                            @Html.ValidationMessageFor(model => model.NovaSenhaConfirmacao)
                        </div>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-12">
                        <button class="btn btn-success" onclick="loading()" type="submit">
                            Salvar alterações
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    <script>
        function togglePassword(id, btn) {
            const input = document.getElementById(id);
            const icon = btn.querySelector("i");

            if (input.type === "password") {
                input.type = "text";
                icon.classList.replace("fa-eye", "fa-eye-slash");
            } else {
                input.type = "password";
                icon.classList.replace("fa-eye-slash", "fa-eye");
            }
        }
    </script>
}

@section styles {
    <style>
        .btn-outline-secondary {
            border-color: #ced4da;
        }
    </style>
}

@section modals {
}
