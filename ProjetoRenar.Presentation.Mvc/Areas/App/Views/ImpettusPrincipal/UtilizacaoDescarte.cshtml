@model ProjetoRenar.Presentation.Mvc.Areas.App.Controllers.FiltrosViewModel

@{
    ViewBag.Icon = "fa fa-list";
    ViewBag.Titulo = "Utilização e descarte";
    ViewBag.Pagina = "Utilização e descarte";
    ViewBag.Subtitulo = "Registrar utilização e descarte de produtos e preparações.";
}

<div class="row" style="margin-top: -10px;">
    <div class="col-md-12">

        <div class="card">
            <div class="card-header">
                <div class="row align-items-center">
                    <div class="col-md-12">
                        <h4 style="margin-top: 10px;" class="card-title">
                            <i class="fa fa-print"></i>&nbsp;Registrar utilização e descarte de produtos e preparações.
                        </h4>
                    </div>
                </div>
            </div>

            <div class="card-body">
                <!-- Formulário de filtros -->
                <form method="get" class="row g-3 align-items-center mb-4 ml-4">

                    <div class="col-auto">
                        <div class="form-check">
                            @Html.CheckBoxFor(m => m.Produtos, new { @class = "form-check-input", id = "filtro-produtos" })
                            <label class="form-check-label" for="filtro-produtos">Produtos</label>
                        </div>
                    </div>

                    <div class="col-auto">
                        <div class="form-check">
                            @Html.CheckBoxFor(m => m.Preparacoes, new { @class = "form-check-input", id = "filtro-preparacoes" })
                            <label class="form-check-label" for="filtro-preparacoes">Preparações</label>
                        </div>
                    </div>

                    <div class="col-auto">
                        <input type="text" name="Nome" class="form-control" placeholder="Nome" value="@Model.Nome" />
                    </div>

                    <div class="col-auto">
                        <input type="date" name="DataInicio" class="form-control" value="@(Model.DataInicio?.ToString("yyyy-MM-dd") ?? "")" />
                    </div>

                    <div class="col-auto">
                        <input type="date" name="DataFim" class="form-control" value="@(Model.DataFim?.ToString("yyyy-MM-dd") ?? "")" />
                    </div>
                    @using ProjetoRenar.Presentation.Mvc.Areas.App.Controllers
                   
                    <div class="col-auto">
                        <select name="StatusValidade" class="form-select">
                            <option value="Todos" @(Model.StatusValidade == StatusValidadeFiltro.Todos ? "selected" : "")>Todos</option>
                            <option value="Vencido" @(Model.StatusValidade == StatusValidadeFiltro.Vencido ? "selected" : "")>Vencido</option>
                            <option value="AVencer" @(Model.StatusValidade == StatusValidadeFiltro.AVencer ? "selected" : "")>A vencer</option>
                            <option value="Valido" @(Model.StatusValidade == StatusValidadeFiltro.Valido ? "selected" : "")>Válido</option>
                        </select>
                    </div>

                    <div class="col-auto">
                        <button type="submit" class="btn btn-primary" onclick="loading()">Aplicar filtros</button>
                    </div>
                </form>

                <!-- Resultado filtrado -->
                <div class="row" id="board-produtos">
                    @foreach (var item in Model.Etiquetas)
                    {
                        var dataValidadeStr = item.Etiqueta.DataValidade;
                        string statusTexto = "Válido";
                        string statusClasse = "status-valido";

                        if (DateTime.TryParse(dataValidadeStr, out var dataValidade))
                        {
                            var hoje = DateTime.Now.Date;
                            var diffDias = (dataValidade - hoje).TotalDays;

                            if (dataValidade < hoje)
                            {
                                statusTexto = "Vencido";
                                statusClasse = "status-vencido";
                            }
                            else if (diffDias >= 0 && diffDias <= 1)
                            {
                                // Se vence hoje ou amanhã (1 dia de antecedência)
                                statusTexto = "A vencer";
                                statusClasse = "status-a-vencer";
                            }
                        }

                        <div class="col-sm-4 item-card"
                             data-id="@item.Id"
                             data-flagproduto="@item.Etiqueta.FlagProduto"
                             data-flagpreparacao="@item.Etiqueta.FlagPreparacao"
                             data-impressao="@item.DataImpressao.ToString("yyyy-MM-dd")">

                            <div class="card border @statusClasse" style="margin-bottom: 15px;">
                                <div class="card-body" style="background-color: #fff; padding: 10px;">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <p style="font-size: 11px; color: #777; margin-bottom: 5px;">
                                            Gerada em: @item.DataImpressao.ToString("dd/MM/yyyy HH:mm")
                                        </p>
                                        <div class="status-wrapper @statusClasse">
                                            <span class="status-indicador"></span>
                                            <span class="status-text">@statusTexto</span>
                                        </div>
                                    </div>

                                    <h5><strong>@item.Etiqueta.NomeProduto</strong></h5>

                                    @if (!string.IsNullOrEmpty(item.Etiqueta.SIF))
                                    {
                                        <div style="color:#000;"><small>SIF: @item.Etiqueta.SIF</small></div>
                                    }

                                    @if (!string.IsNullOrEmpty(item.Etiqueta.Lote))
                                    {
                                        <div style="color:#000;"><small>Lote: @item.Etiqueta.Lote</small></div>
                                    }

                                    @if (!string.IsNullOrEmpty(item.Etiqueta.Quantidade))
                                    {
                                        <div style="color:#000;"><small>Quantidade: @item.Etiqueta.Quantidade</small></div>
                                    }

                                    <hr style="margin: 0px;" />
                                    <table class="info-table" style="width: 100%; margin-bottom: 10px; margin-top: 5px;">
                                        <tbody>
                                            <tr>
                                                <td><small><strong>Tipo:</strong></small></td>
                                                <td><small>@item.Etiqueta.ModosConservacao.FirstOrDefault()</small></td>
                                            </tr>
                                            <tr>
                                                <td><small><strong>Data Fabricação:</strong></small></td>
                                                <td><small>@item.Etiqueta.DataManipulacao</small></td>
                                            </tr>
                                            <tr>
                                                <td><small><strong>Data Validade:</strong></small></td>
                                                <td><small>@item.Etiqueta.DataValidade</small></td>
                                            </tr>
                                        </tbody>
                                    </table>

                                    <div class="d-flex justify-content-end gap-2" style="font-size: 13px; color: #555; margin-top: 10px;">
                                        <a href="@Url.Action("DarBaixa", "ImpettusPrincipal", new { id = item.Id, area = "App" })"
                                           class="btn btn-xs btn-outline-primary"
                                           style="border: 1px solid #007bff; color: #007bff; background-color: transparent; padding: 3px 8px;"
                                           onmouseover="this.style.backgroundColor='#007bff'; this.style.color='#fff';"
                                           onmouseout="this.style.backgroundColor='transparent'; this.style.color='#007bff';"
                                           onclick="return confirm('Tem certeza que deseja dar baixa neste item?');">
                                            <i class="fa fa-download"></i> Dar Baixa
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</div>

@section styles {
    <style>
        .item-card .card {
            border: 1px solid #ddd;
            padding: 10px;
            height: 100%;
            background-color: #f9f9f9;
            border-radius: 4px;
            box-shadow: 1px 1px 3px rgba(0,0,0,0.1);
        }

        #board-produtos .item-card {
            margin-bottom: 15px;
        }

        .status-wrapper {
            display: flex;
            align-items: center;
            gap: 5px;
            font-size: 12px;
            font-weight: 500;
        }

        /* Bolinha herda a cor do texto */
        .status-indicador {
            display: inline-block;
            width: 10px;
            height: 10px;
            border-radius: 50%;
            background-color: currentColor;
        }

        /* Cor do texto e borda do card */
        .status-vencido {
            color: red;
            border-color: red !important;
        }

        .status-a-vencer {
            color: orange;
            border-color: orange !important;
        }

        .status-valido {
            color: green;
            border-color: green !important;
        }

        select.status-vencido option[value="Vencido"] {
            color: red;
        }

        select.status-a-vencer option[value="AVencer"] {
            color: orange;
        }

        select.status-valido option[value="Valido"] {
            color: green;
        }

        select.form-select {
            min-width: 150px;
        }


/* Bolinha herda a cor do texto */
.status-wrapper .status-indicador {
    background-color: currentColor;
}

    </style>
}

@section scripts {
    <script>
        function confirmarAcao(botao, acao, id) {
            var texto = "Tem certeza que deseja " + acao + " este item?";
            if (confirm(texto)) {
                // Aqui pode fazer post AJAX para API futuramente
                $(botao).closest('.item-card').fadeOut(300, function () {
                    $(this).remove();
                });
            }
        }
    </script>
}
